{
  "git init": {
    "definition": "Initialize a new Git repository",
    "practical_use": "Start a new project tracked by Git"
  },
  "git clone": {
    "definition": "Clone a repository into a new directory",
    "practical_use": "Download a project from a remote repository like GitHub to work locally"
  },
  "git add": {
    "definition": "Add files to the staging area",
    "practical_use": "Prepare changes for commit by adding modified files to the staging area"
  },
  "git commit": {
    "definition": "Create a new commit with the changes in the staging area",
    "practical_use": "Save changes to the repository with a descriptive message"
  },
  "git push": {
    "definition": "Upload local changes to a remote repository",
    "practical_use": "Upload local commits to a remote repository, like when contributing to a project on GitHub"
  },
  "git pull": {
    "definition": "Download changes from a remote repository to your local repository",
    "practical_use": "Update your local repository with the latest changes from the remote"
  },
  "git fetch": {
    "definition": "Download changes from a remote repository without merging them",
    "practical_use": "Check the updates from the remote repository without affecting your local work"
  },
  "git branch": {
    "definition": "Create, list, or delete branches",
    "practical_use": "Manage branches in your repository. Branching is useful when you want to add a feature or fix a bug without disturbing the main code"
  },
  "git merge": {
    "definition": "Merge changes from one branch into another",
    "practical_use": "Integrate changes from one branch into another, like when you've finished a feature and want to add it to the main code"
  },
  "git diff": {
    "definition": "Show differences between commits, branches, or files",
    "practical_use": "Review changes you've made in the code"
  },
  "git cherry-pick": {
    "definition": "Apply a specific commit to the current branch",
    "practical_use": "Incorporate a specific commit from another branch into the current branch"
  },
  "git status": {
    "definition": "Show the status of files in the repository",
    "practical_use": "Check the current state of files (untracked, modified, staged, etc.) in the repository"
  },
  "git log": {
    "definition": "Display commit history",
    "practical_use": "View the commit history of the repository, including the author, date, and commit message"
  },
  "git rebase": {
    "definition": "Reapply commits on top of another base commit",
    "practical_use": "Modify the commit history by moving, combining, or splitting commits"
  },
  "git stash": {
    "definition": "Save changes that are not ready to be committed",
    "practical_use": "Temporarily save changes without committing them, allowing you to switch branches or perform other tasks"
  },
  "git tag": {
    "definition": "Create, list, or delete tags",
    "practical_use": "Assign meaningful names to specific points in Git history, such as releases or important commits"
  },
  "git blame": {
    "definition": "Show who modified each line in a file and when",
    "practical_use": "Identify the author and commit information for each line of a file"
  },
  "git show": {
    "definition": "Show information about a specific commit",
    "practical_use": "Display the details of a commit, including the changes made and the commit message"
  },
  "git revert": {
    "definition": "Create a new commit that undoes a previous commit",
    "practical_use": "Reverse the changes made by a previous commit and create a new commit to undo those changes"
  },
  "git checkout": {
    "definition": "Switch branches or restore files",
    "practical_use": "Switch between branches or restore files to a previous state"
  },
  "git clean": {
    "definition": "Remove untracked files from the working directory",
    "practical_use": "Delete files that are not tracked by Git, helping to keep the working directory clean"
  },
  "git show-branch": {
    "definition": "Show branches and their commits",
    "practical_use": "Display the commits and their relationships across multiple branches"
  },
  "git archive": {
    "definition": "Create a tar or zip archive of a repository's contents",
    "practical_use": "Export a specific version of a repository as an archive file for sharing or deployment"
  },
  "git bisect": {
    "definition": "Find the commit that introduced a bug using binary search",
    "practical_use": "Systematically identify the commit that introduced a bug by narrowing down the search range"
  },
  "git rebase -i": {
    "definition": "Interactively rebase commits",
    "practical_use": "Modify, reorder, squash, or delete commits interactively to refine the commit history"
  },
  "git cherry": {
    "definition": "Find commits that have not been merged",
    "practical_use": "Identify commits that exist in one"
  },
  "git remote": {
    "options": {
      "git add": {
        "definition": "Add a remote repository",
        "practical_use": "Link a local repository to a remote repository by specifying a remote name and URL"
      },
      "git remove": {
        "definition": "Remove a remote repository",
        "practical_use": "Disconnect a remote repository from the local repository"
      },
      "git rename": {
        "definition": "Rename a remote repository",
        "practical_use": "Change the name of a remote repository in the local repository"
      },
      "git set-url": {
        "definition": "Change the URL of a remote repository",
        "practical_use": "Update the URL of a remote repository associated with the local repository"
      },
      "git show": {
        "definition": "Show information about a remote repository",
        "practical_use": "Display details such as the URL and fetch/push configuration of a remote repository"
      },
      "git get-url": {
        "definition": "Get the URL of a remote repository",
        "practical_use": "Retrieve the URL of a remote repository associated with the local repository"
      },
      "git prune": {
        "definition": "Remove stale references to remote branches",
        "practical_use": "Clean up the local repository by removing references to remote branches that no longer exist"
      },
      "git set-head": {
        "definition": "Set the default branch for fetching from a remote repository",
        "practical_use": "Configure the default branch to be fetched from a remote repository"
      },
      "git update": {
        "definition": "Update remote-tracking branches",
        "practical_use": "Fetch the latest changes from the remote repository and update the corresponding remote-tracking branches"
      },
      "git show-tags": {
        "definition": "Show tags from a remote repository",
        "practical_use": "Display the tags available in a remote repository"
      },
      "git prune-tags": {
        "definition": "Remove tags that no longer exist on the remote repository",
        "practical_use": "Delete local tags that no longer exist in the remote repository"
      },
      "git set-branches": {
        "definition": "Configure the branches to be pushed to or pulled from a remote repository",
        "practical_use": "Specify the branches to be included in push or pull operations with a remote repository"
      }
    }
  },
  "git config": {
    "options": {
      "git config --global": {
        "definition": "Set configuration options globally for all repositories",
        "practical_use": "Configure Git options that apply to all repositories on the local machine"
      },
      "git config --local": {
        "definition": "Set configuration options for the current repository",
        "practical_use": "Configure Git options that apply only to the current repository"
      },
      "git config --user.name": {
        "definition": "Set the username for Git",
        "practical_use": "Configure the username for the current repository"
      },
      "git config --user.email": {
        "definition": "Set the email address for Git",
        "practical_use": "Configure the email address for the current repository"
      },
      "git config --list": {
        "definition": "Show all Git configurations",
        "practical_use": "Display a list of all Git configurations for the current repository"
      },
      "git config--global --list": {
        "definition": "Show all global Git configurations",
        "practical_use": "Display a list of all global Git configurations for all repositories on the local machine"
      }
    }
  },
    "git branch -d": {
      "definition": "Delete a branch",
      "practical_use": "Remove a branch after it has been merged or is no longer needed"
    },
    "git branch -r": {
      "definition": "List remote branches",
      "practical_use": "Display a list of remote branches in the repository"
    },
    "git branch -a": {
      "definition": "List all branches (local and remote)",
      "practical_use": "View a combined list of both local and remote branches in the repository"
    },
    "git branch -m": {
      "definition": "Rename a branch",
      "practical_use": "Change the name of a branch"
    },
    "git branch -u": {
      "definition": "Set upstream branch",
      "practical_use": "Configure the upstream branch for a local branch"
    },
    "git branch -vv": {
      "definition": "Show tracking branches",
      "practical_use": "Display a list of local branches with information about their upstream tracking branches"
    },
    "git remote -v": {
      "definition": "Show remote repository details",
      "practical_use": "Display the details of the remote repositories associated with the local repository"
    },
    "git fetch --all": {
      "definition": "Fetch all remote branches",
      "practical_use": "Retrieve updates from all remote repositories and update the local branches accordingly"
    },
    "git push --force": {
      "definition": "Force push changes to a remote repository",
      "practical_use": "Overwrite remote branch history with local branch history, use with caution"
    },
    "git stash pop": {
      "definition": "Apply the most recently stashed changes and remove it from the stash list",
      "practical_use": "Retrieve the most recently stashed changes and apply them to the current branch"
    },
    "git stash list": {
      "definition": "List all stashed changes",
      "practical_use": "Display a list of all stashed changes in the repository"
    },
    "git stash drop": {
      "definition": "Remove a specific stash",
      "practical_use": "Delete a specific stash from the stash list"
    },
    "git tag -a": {
      "definition": "Create an annotated tag",
      "practical_use": "Create a tag with a message, author, and date, providing additional information about the tagged commit"
    },
    "git tag -l": {
      "definition": "List tags",
      "practical_use": "Display a list of tags in the repository"
    },
    "git tag -d": {
      "definition": "Delete a tag",
      "practical_use": "Remove a tag from the repository"
    },
    "git tag -n": {
      "definition": "Show tag details",
      "practical_use": "Display the details of a specific tag, including the message and the commit it points to"
    },
    "git blame -L": {
      "definition": "Show who modified specific lines in a file and when",
      "practical_use": "Identify the author and commit information for specific lines of a file"
    },
    "git clean -n": {
      "definition": "Perform a dry run of git clean",
      "practical_use": "Preview the files and directories that will be removed by the `git clean` command"
    },
    "git clean -f": {
      "definition": "Forcefully remove untracked files from the working directory",
      "practical_use": "Clean up the working directory by permanently deleting untracked files and directories. This is useful when you want to remove generated or temporary files that are not part of the Git repository."
    }
}